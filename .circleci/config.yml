version: 2.1

executors:
  laravel-circleci:
    docker:
      - image: circleci/php:7.4-node-browsers
      - image: circleci/mysql:5.7
    environment:
      #- APP_DEBUG: true
      #- APP_ENV: testing
      #- APP_KEY: base64:UdiSS/AgMKN0J0a//YjvyMWg5IhC1VvbEYfh+G4Rb1Q=
      #- DB_CONNECTION: mysql
      #- DB_HOST: 127.0.0.1
      #- DB_DATABASE: demo_test
      #- DB_USERNAME: root
      #- DB_PASSWORD: ''
      #- MYSQL_ALLOW_EMPTY_PASSWORD: true
      - MYSQL_ROOT_PASSWORD: rootpw
      - MYSQL_DATABASE: test_db
      - MYSQL_USER: user
      - MYSQL_PASSWORD: passw0rd
    working_directory: ~/repo

commands:
  install-dockerize:
    steps:
      - run:
          name: Install dockerize
          command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.6.1
  install-php-extensions:
    steps:
      - run:
          name: Install PHP Exetensions
          command: sudo docker-php-ext-install pdo_mysql
          working_directory: src
  restore-cache-composer:
    steps:
      - restore_cache:
          key: v1-dependencies-{{ checksum "src/composer.json" }}
  install-composer:
    steps:
      - run:
          name: Install Composer
          command: composer install -n --prefer-dist
          working_directory: src
  save-cache-composer:
    steps:
      - save_cache:
          key: v1-dependencies-{{ checksum "src/composer.json" }}
          paths:
            - vendor
  migration-seeding:
    steps:
      - run:
          name: Migration & Seeding
          command: php artisan migrate --seed
          working_directory: src
  test-unittest:
    steps:
      - run:
          name: Run PHPUnit
          command: vendor/bin/phpunit
          working_directory: src

jobs:
  build:
    executor:
      name: laravel-circleci
    steps:
      - checkout
      - install-dockerize
            - run:
          name: package list update
      - run:
          name: Update
          command: |
            sudo wget -q -O - https://dl.google.com/linux/linux_signing_key.pub
            sudo apt-key add -
      - run:
          name: MySQL CLI のインストール; ダミー データのインポート; サンプル クエリの実行
          command: |
            sudo apt-get install default-mysql-client
            mysql -h 127.0.0.1 -u user -ppassw0rd test_db < sql-data/dummy.sql
            mysql -h 127.0.0.1 -u user -ppassw0rd --execute="SELECT * FROM test_db.Persons"
      - install-php-extensions
      - restore-cache-composer
      - install-composer
      - save-cache-composer
      - migration-seeding
      - test-unittest
